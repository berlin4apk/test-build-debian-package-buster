Author: Steve Langasek <steve.langasek@ubuntu.com>
Description: use correct handling of enums in switch to make compiler happy
 These cases can never actually occur inside the switch statement; but gcc
 doesn't know that, so explicitly handle the case since this is better 
 than bypassing gcc's sanity checks.

Index: edk2-0~20121205.edae8d2d/Shell/shellenv/dprot.c
===================================================================
--- edk2-0~20121205.edae8d2d.orig/Shell/shellenv/dprot.c
+++ edk2-0~20121205.edae8d2d/Shell/shellenv/dprot.c
@@ -1294,6 +1294,10 @@
     case EfiIsaAcpiResourceInterrupt:
       PrintToken (STRING_TOKEN (STR_SHELLENV_DPROT_INT), HiiEnvHandle);
       break;
+
+    // Not possible, but make the compiler happy.
+    case EfiIsaAcpiResourceEndOfList:
+      break;
     }
 
     if (IsaIo->ResourceList->ResourceItem[Index].StartRange == IsaIo->ResourceList->ResourceItem[Index].EndRange) {
Index: edk2-0~20121205.edae8d2d/Shell/hexedit/main.c
===================================================================
--- edk2-0~20121205.edae8d2d.orig/Shell/hexedit/main.c
+++ edk2-0~20121205.edae8d2d/Shell/hexedit/main.c
@@ -421,6 +421,8 @@
               FALSE
               );
     break;
+  default:
+    break;
 
   }
 
Index: edk2-0~20121205.edae8d2d/Shell/hexedit/libBufferImage.c
===================================================================
--- edk2-0~20121205.edae8d2d.orig/Shell/hexedit/libBufferImage.c
+++ edk2-0~20121205.edae8d2d/Shell/hexedit/libBufferImage.c
@@ -203,6 +203,9 @@
   case MEM_BUFFER:
     HMemImageBackup ();
     break;
+
+  default:
+    break;
   }
 
   return EFI_SUCCESS;
@@ -980,6 +983,9 @@
   case MEM_BUFFER:
     Status = HMemImageRead (MemOffset, MemSize, Recover);
     break;
+
+  default:
+    break;
   }
 
   if (EFI_ERROR (Status)) {
@@ -1030,6 +1036,9 @@
   case MEM_BUFFER:
     Status = HMemImageSave (MemOffset, MemSize);
     break;
+
+  default:
+    break;
   }
 
   if (EFI_ERROR (Status)) {
Index: edk2-0~20121205.edae8d2d/Shell/hexedit/libEditor.c
===================================================================
--- edk2-0~20121205.edae8d2d.orig/Shell/hexedit/libEditor.c
+++ edk2-0~20121205.edae8d2d/Shell/hexedit/libEditor.c
@@ -732,6 +732,9 @@
         case MEM_BUFFER:
           OldSize = HBufferImage.MemImage->Size;
           break;
+
+        default:
+          break;
         }
 
         if (LengthChange == FALSE) {
Index: edk2-0~20121205.edae8d2d/Shell/hexedit/libTitleBar.c
===================================================================
--- edk2-0~20121205.edae8d2d.orig/Shell/hexedit/libTitleBar.c
+++ edk2-0~20121205.edae8d2d/Shell/hexedit/libTitleBar.c
@@ -280,6 +280,8 @@
 
     break;
 
+  default:
+    break;
   }
   //
   // 9 characters
@@ -296,6 +298,9 @@
   case MEM_BUFFER:
     PrintToken (STRING_TOKEN (STR_HEXEDIT_LIBTITLEBAR_MEM), gHexEditHiiHandle);
     break;
+
+  default:
+    break;
   }
   //
   // print modified field
Index: edk2-0~20121205.edae8d2d/Shell/pci/pci.c
===================================================================
--- edk2-0~20121205.edae8d2d.orig/Shell/pci/pci.c
+++ edk2-0~20121205.edae8d2d/Shell/pci/pci.c
@@ -1300,6 +1300,9 @@
               );
     CapPtr = ConfigSpace->NonCommon.CardBus.CapabilitiesPtr;
     break;
+
+  case PciUndefined:
+    break;
   }
   //
   // If Status bit4 is 1, dump or explain capability structure
